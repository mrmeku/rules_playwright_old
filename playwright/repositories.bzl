"""Declare runtime dependencies

These are needed for local dev, and users must install them as well.
See https://docs.bazel.build/versions/main/skylark/deploying.html#dependencies
"""

load("@bazel_tools//tools/build_defs/repo:http.bzl", _http_archive = "http_archive")
load("@bazel_tools//tools/build_defs/repo:utils.bzl", "maybe")
load("//playwright/private:toolchains_repo.bzl", "PLATFORMS", "toolchains_repo")

def http_archive(name, **kwargs):
    maybe(_http_archive, name = name, **kwargs)

# WARNING: any changes in this function may be BREAKING CHANGES for users
# because we'll fetch a dependency which may be different from one that
# they were previously fetching later in their WORKSPACE setup, and now
# ours took precedence. Such breakages are challenging for users, so any
# changes in this function should be marked as BREAKING in the commit message
# and released only in semver majors.
# This is all fixed by bzlmod, so we just tolerate it for now.
def rules_playwright_dependencies():
    # The minimal version of bazel_skylib we require
    http_archive(
        name = "bazel_skylib",
        sha256 = "cd55a062e763b9349921f0f5db8c3933288dc8ba4f76dd9416aac68acee3cb94",
        urls = [
            "https://github.com/bazelbuild/bazel-skylib/releases/download/1.5.0/bazel-skylib-1.5.0.tar.gz",
            "https://mirror.bazel.build/github.com/bazelbuild/bazel-skylib/releases/download/1.5.0/bazel-skylib-1.5.0.tar.gz",
        ],
    )

########
# Remaining content of the file is only used to support toolchains.
########
_DOC = "Fetch external tools needed for playwright toolchain"
_ATTRS = {
    "playwright_version": attr.string(mandatory = True),
    "platform": attr.string(mandatory = True, values = PLATFORMS.keys()),
}

def _playwright_repo_impl(repository_ctx):
    build_content = """# Generated by playwright/repositories.bzl
load("@mrmeku_rules_playwright//playwright:toolchain.bzl", "playwright_toolchain")

playwright_toolchain(
    name = "playwright_toolchain",
    target_tool = select({
        "@bazel_tools//src/conditions:host_windows": "playwright_tool.exe",
        "//conditions:default": "playwright_tool",
    }),
)
"""

    # Base BUILD file for this repository
    repository_ctx.file("BUILD.bazel", build_content)

playwright_repositories = repository_rule(
    _playwright_repo_impl,
    doc = _DOC,
    attrs = _ATTRS,
)

# Wrapper macro around everything above, this is the primary API
def playwright_register_toolchains(name, register = True, **kwargs):
    """Convenience macro for users which does typical setup.

    - create a repository for each built-in platform like "playwright_linux_amd64" -
      this repository is lazily fetched when node is needed for that platform.
    - TODO: create a convenience repository for the host platform like "playwright_host"
    - create a repository exposing toolchains for each platform like "playwright_platforms"
    - register a toolchain pointing at each platform
    Users can avoid this macro and do these steps themselves, if they want more control.
    Args:
        name: base name for all created repos, like "playwright1_14"
        register: whether to call through to native.register_toolchains.
            Should be True for WORKSPACE users, but false when used under bzlmod extension
        **kwargs: passed to each node_repositories call
    """
    for platform in PLATFORMS.keys():
        playwright_repositories(
            name = name + "_" + platform,
            platform = platform,
            **kwargs
        )
        if register:
            native.register_toolchains("@%s_toolchains//:%s_toolchain" % (name, platform))

    toolchains_repo(
        name = name + "_toolchains",
        user_repository_name = name,
    )

PLAYWRIGHT_CDN_MIRRORS = [
    "https://playwright.azureedge.net",
    "https://playwright-akamai.azureedge.net",
    "https://playwright-verizon.azureedge.net",
]

EXECUTABLE_PATHS = {
    "chromium": {
        "linux": ["chrome-linux", "chrome"],
        "mac": ["chrome-mac", "Chromium.app", "Contents", "MacOS", "Chromium"],
        "win": ["chrome-win", "chrome.exe"],
    },
    "firefox": {
        "linux": ["firefox", "firefox"],
        "mac": ["firefox", "Nightly.app", "Contents", "MacOS", "firefox"],
        "win": ["firefox", "firefox.exe"],
    },
    "webkit": {
        "linux": ["pw_run.sh"],
        "mac": ["pw_run.sh"],
        "win": ["Playwright.exe"],
    },
    "ffmpeg": {
        "linux": ["ffmpeg-linux"],
        "mac": ["ffmpeg-mac"],
        "win": ["ffmpeg-win64.exe"],
    },
}

DOWNLOAD_PATHS = {
    "chromium": {
        "ubuntu18.04-x64": None,
        "ubuntu20.04-x64": "builds/chromium/%s/chromium-linux.zip",
        "ubuntu22.04-x64": "builds/chromium/%s/chromium-linux.zip",
        "ubuntu18.04-arm64": None,
        "ubuntu20.04-arm64": "builds/chromium/%s/chromium-linux-arm64.zip",
        "ubuntu22.04-arm64": "builds/chromium/%s/chromium-linux-arm64.zip",
        "debian11-x64": "builds/chromium/%s/chromium-linux.zip",
        "debian11-arm64": "builds/chromium/%s/chromium-linux-arm64.zip",
        "debian12-x64": "builds/chromium/%s/chromium-linux.zip",
        "debian12-arm64": "builds/chromium/%s/chromium-linux-arm64.zip",
        "mac10.13": "builds/chromium/%s/chromium-mac.zip",
        "mac10.14": "builds/chromium/%s/chromium-mac.zip",
        "mac10.15": "builds/chromium/%s/chromium-mac.zip",
        "mac11": "builds/chromium/%s/chromium-mac.zip",
        "mac11-arm64": "builds/chromium/%s/chromium-mac-arm64.zip",
        "mac12": "builds/chromium/%s/chromium-mac.zip",
        "mac12-arm64": "builds/chromium/%s/chromium-mac-arm64.zip",
        "mac13": "builds/chromium/%s/chromium-mac.zip",
        "mac13-arm64": "builds/chromium/%s/chromium-mac-arm64.zip",
        "mac14": "builds/chromium/%s/chromium-mac.zip",
        "mac14-arm64": "builds/chromium/%s/chromium-mac-arm64.zip",
        "win64": "builds/chromium/%s/chromium-win64.zip",
    },
    "chromium-tip-of-tree": {
        "ubuntu18.04-x64": None,
        "ubuntu20.04-x64": "builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-linux.zip",
        "ubuntu22.04-x64": "builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-linux.zip",
        "ubuntu18.04-arm64": None,
        "ubuntu20.04-arm64": "builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-linux-arm64.zip",
        "ubuntu22.04-arm64": "builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-linux-arm64.zip",
        "debian11-x64": "builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-linux.zip",
        "debian11-arm64": "builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-linux-arm64.zip",
        "debian12-x64": "builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-linux.zip",
        "debian12-arm64": "builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-linux-arm64.zip",
        "mac10.13": "builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-mac.zip",
        "mac10.14": "builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-mac.zip",
        "mac10.15": "builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-mac.zip",
        "mac11": "builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-mac.zip",
        "mac11-arm64": "builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-mac-arm64.zip",
        "mac12": "builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-mac.zip",
        "mac12-arm64": "builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-mac-arm64.zip",
        "mac13": "builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-mac.zip",
        "mac13-arm64": "builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-mac-arm64.zip",
        "mac14": "builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-mac.zip",
        "mac14-arm64": "builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-mac-arm64.zip",
        "win64": "builds/chromium-tip-of-tree/%s/chromium-tip-of-tree-win64.zip",
    },
    "firefox": {
        "ubuntu18.04-x64": None,
        "ubuntu20.04-x64": "builds/firefox/%s/firefox-ubuntu-20.04.zip",
        "ubuntu22.04-x64": "builds/firefox/%s/firefox-ubuntu-22.04.zip",
        "ubuntu18.04-arm64": None,
        "ubuntu20.04-arm64": "builds/firefox/%s/firefox-ubuntu-20.04-arm64.zip",
        "ubuntu22.04-arm64": "builds/firefox/%s/firefox-ubuntu-22.04-arm64.zip",
        "debian11-x64": "builds/firefox/%s/firefox-debian-11.zip",
        "debian11-arm64": "builds/firefox/%s/firefox-debian-11-arm64.zip",
        "debian12-x64": "builds/firefox/%s/firefox-debian-12.zip",
        "debian12-arm64": "builds/firefox/%s/firefox-debian-12-arm64.zip",
        "mac10.13": "builds/firefox/%s/firefox-mac-13.zip",
        "mac10.14": "builds/firefox/%s/firefox-mac-13.zip",
        "mac10.15": "builds/firefox/%s/firefox-mac-13.zip",
        "mac11": "builds/firefox/%s/firefox-mac-13.zip",
        "mac11-arm64": "builds/firefox/%s/firefox-mac-13-arm64.zip",
        "mac12": "builds/firefox/%s/firefox-mac-13.zip",
        "mac12-arm64": "builds/firefox/%s/firefox-mac-13-arm64.zip",
        "mac13": "builds/firefox/%s/firefox-mac-13.zip",
        "mac13-arm64": "builds/firefox/%s/firefox-mac-13-arm64.zip",
        "mac14": "builds/firefox/%s/firefox-mac-13.zip",
        "mac14-arm64": "builds/firefox/%s/firefox-mac-13-arm64.zip",
        "win64": "builds/firefox/%s/firefox-win64.zip",
    },
    "firefox-beta": {
        "ubuntu18.04-x64": None,
        "ubuntu20.04-x64": "builds/firefox-beta/%s/firefox-beta-ubuntu-20.04.zip",
        "ubuntu22.04-x64": "builds/firefox-beta/%s/firefox-beta-ubuntu-22.04.zip",
        "ubuntu18.04-arm64": None,
        "ubuntu20.04-arm64": None,
        "ubuntu22.04-arm64": "builds/firefox-beta/%s/firefox-beta-ubuntu-22.04-arm64.zip",
        "debian11-x64": "builds/firefox-beta/%s/firefox-beta-debian-11.zip",
        "debian11-arm64": "builds/firefox-beta/%s/firefox-beta-debian-11-arm64.zip",
        "debian12-x64": "builds/firefox-beta/%s/firefox-beta-debian-12.zip",
        "debian12-arm64": "builds/firefox-beta/%s/firefox-beta-debian-12-arm64.zip",
        "mac10.13": "builds/firefox-beta/%s/firefox-beta-mac-13.zip",
        "mac10.14": "builds/firefox-beta/%s/firefox-beta-mac-13.zip",
        "mac10.15": "builds/firefox-beta/%s/firefox-beta-mac-13.zip",
        "mac11": "builds/firefox-beta/%s/firefox-beta-mac-13.zip",
        "mac11-arm64": "builds/firefox-beta/%s/firefox-beta-mac-13-arm64.zip",
        "mac12": "builds/firefox-beta/%s/firefox-beta-mac-13.zip",
        "mac12-arm64": "builds/firefox-beta/%s/firefox-beta-mac-13-arm64.zip",
        "mac13": "builds/firefox-beta/%s/firefox-beta-mac-13.zip",
        "mac13-arm64": "builds/firefox-beta/%s/firefox-beta-mac-13-arm64.zip",
        "mac14": "builds/firefox-beta/%s/firefox-beta-mac-13.zip",
        "mac14-arm64": "builds/firefox-beta/%s/firefox-beta-mac-13-arm64.zip",
        "win64": "builds/firefox-beta/%s/firefox-beta-win64.zip",
    },
    "webkit": {
        "ubuntu18.04-x64": None,
        "ubuntu20.04-x64": "builds/webkit/%s/webkit-ubuntu-20.04.zip",
        "ubuntu22.04-x64": "builds/webkit/%s/webkit-ubuntu-22.04.zip",
        "ubuntu18.04-arm64": None,
        "ubuntu20.04-arm64": "builds/webkit/%s/webkit-ubuntu-20.04-arm64.zip",
        "ubuntu22.04-arm64": "builds/webkit/%s/webkit-ubuntu-22.04-arm64.zip",
        "debian11-x64": "builds/webkit/%s/webkit-debian-11.zip",
        "debian11-arm64": "builds/webkit/%s/webkit-debian-11-arm64.zip",
        "debian12-x64": "builds/webkit/%s/webkit-debian-12.zip",
        "debian12-arm64": "builds/webkit/%s/webkit-debian-12-arm64.zip",
        "mac10.13": None,
        "mac10.14": "builds/deprecated-webkit-mac-10.14/%s/deprecated-webkit-mac-10.14.zip",
        "mac10.15": "builds/deprecated-webkit-mac-10.15/%s/deprecated-webkit-mac-10.15.zip",
        "mac11": "builds/webkit/%s/webkit-mac-11.zip",
        "mac11-arm64": "builds/webkit/%s/webkit-mac-11-arm64.zip",
        "mac12": "builds/webkit/%s/webkit-mac-12.zip",
        "mac12-arm64": "builds/webkit/%s/webkit-mac-12-arm64.zip",
        "mac13": "builds/webkit/%s/webkit-mac-13.zip",
        "mac13-arm64": "builds/webkit/%s/webkit-mac-13-arm64.zip",
        "mac14": "builds/webkit/%s/webkit-mac-14.zip",
        "mac14-arm64": "builds/webkit/%s/webkit-mac-14-arm64.zip",
        "win64": "builds/webkit/%s/webkit-win64.zip",
    },
    "ffmpeg": {
        "ubuntu18.04-x64": None,
        "ubuntu20.04-x64": "builds/ffmpeg/%s/ffmpeg-linux.zip",
        "ubuntu22.04-x64": "builds/ffmpeg/%s/ffmpeg-linux.zip",
        "ubuntu18.04-arm64": None,
        "ubuntu20.04-arm64": "builds/ffmpeg/%s/ffmpeg-linux-arm64.zip",
        "ubuntu22.04-arm64": "builds/ffmpeg/%s/ffmpeg-linux-arm64.zip",
        "debian11-x64": "builds/ffmpeg/%s/ffmpeg-linux.zip",
        "debian11-arm64": "builds/ffmpeg/%s/ffmpeg-linux-arm64.zip",
        "debian12-x64": "builds/ffmpeg/%s/ffmpeg-linux.zip",
        "debian12-arm64": "builds/ffmpeg/%s/ffmpeg-linux-arm64.zip",
        "mac10.13": "builds/ffmpeg/%s/ffmpeg-mac.zip",
        "mac10.14": "builds/ffmpeg/%s/ffmpeg-mac.zip",
        "mac10.15": "builds/ffmpeg/%s/ffmpeg-mac.zip",
        "mac11": "builds/ffmpeg/%s/ffmpeg-mac.zip",
        "mac11-arm64": "builds/ffmpeg/%s/ffmpeg-mac-arm64.zip",
        "mac12": "builds/ffmpeg/%s/ffmpeg-mac.zip",
        "mac12-arm64": "builds/ffmpeg/%s/ffmpeg-mac-arm64.zip",
        "mac13": "builds/ffmpeg/%s/ffmpeg-mac.zip",
        "mac13-arm64": "builds/ffmpeg/%s/ffmpeg-mac-arm64.zip",
        "mac14": "builds/ffmpeg/%s/ffmpeg-mac.zip",
        "mac14-arm64": "builds/ffmpeg/%s/ffmpeg-mac-arm64.zip",
        "win64": "builds/ffmpeg/%s/ffmpeg-win64.zip",
    },
}

BROWSER_TO_GROUP = {
    "chromium": "chromium",
    "firefox": "firefox",
    "webkit": "webkit",
    "ffmpeg": "ffmpeg",
    "firefox-beta": "firefox",
    "chromium-tip-of-tree": "chromium",
}

PLATFORM_TO_OS = {
    "ubuntu18.04-x64": "linux",
    "ubuntu20.04-x64": "linux",
    "ubuntu22.04-x64": "linux",
    "ubuntu18.04-arm64": "linux",
    "ubuntu20.04-arm64": "linux",
    "ubuntu22.04-arm64": "linux",
    "debian11-x64": "linux",
    "debian11-arm64": "linux",
    "debian12-x64": "linux",
    "debian12-arm64": "linux",
    "mac10.13": "mac",
    "mac10.14": "mac",
    "mac10.15": "mac",
    "mac11": "mac",
    "mac11-arm64": "mac",
    "mac12": "mac",
    "mac12-arm64": "mac",
    "mac13": "mac",
    "mac13-arm64": "mac",
    "mac14": "mac",
    "mac14-arm64": "mac",
    "win64": "win",
}
